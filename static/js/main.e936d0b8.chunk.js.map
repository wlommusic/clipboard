{"version":3,"sources":["firebase.js","Todos.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","Todo","id","complete","text","todosRef","collection","currentUser","uid","className","tabIndex","onClick","doc","set","merge","onCompleteTodo","delete","onDeleteTodo","icon","faTrashAlt","size","navigator","clipboard","writeText","faClipboardCheck","Todos","useState","todo","setTodo","useCollectionData","idField","todos","signOut","faSignOutAlt","onSubmit","event","preventDefault","add","createdAt","FieldValue","serverTimestamp","required","value","onChange","e","target","placeholder","type","map","signInWithGoogle","signInWithPopup","GoogleAuthProvider","SignIn","faSignInAlt","App","useAuthState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAKAA,IAASC,cAAc,CAEnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,gBACnBC,MAAO,+CAIJ,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAEnBT,IAAf,E,uBCmCMU,EAAO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACtBC,EAAWL,EAAUM,WAAV,gBAA8BP,EAAKQ,YAAYC,IAA/C,WAMjB,OACE,sBAAcC,UAAU,OAAxB,UACE,wBACEA,UAAS,oBAAeN,EAAW,WAAa,IAChDO,SAAS,IACTC,QAAS,kBAVQ,SAACT,EAAIC,GAAL,OACrBE,EAASO,IAAIV,GAAIW,IAAI,CAAEV,UAAWA,GAAY,CAAEW,OAAO,IASpCC,CAAeb,EAAIC,IAHpC,SAKGC,IAEH,wBAAQO,QAAS,kBAXA,SAACT,GAAD,OAAQG,EAASO,IAAIV,GAAIc,SAWnBC,CAAaf,IAApC,SACE,cAAC,IAAD,CAAiBgB,KAAMC,IAAYV,UAAU,QAAQW,KAAK,SAE5D,wBAAQT,QAAS,kBAAMU,UAAUC,UAAUC,UAAUnB,IAArD,SACE,cAAC,IAAD,CAAiBc,KAAMM,IAAkBf,UAAU,QAAQW,KAAK,WAZ1DlB,IAkBCuB,EApED,WAAO,IAAD,EACMC,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,KAEZvB,EAAWL,EAAUM,WAAV,gBAA8BP,EAAKQ,YAAYC,IAA/C,WAFC,EAGFqB,YAAkBxB,EAAU,CAAEyB,QAAS,OAAhDC,EAHW,oBAkBlB,OACE,qCACE,iCACE,yBAAQtB,UAAU,UAAUE,QAhBlB,kBAAMZ,EAAKiC,WAgBrB,UACA,sBAAMvB,UAAU,UAAhB,qBACE,cAAC,IAAD,CAAiBS,KAAMe,IAAcxB,UAAU,QAAQW,KAAK,YAGhE,iCACE,uBAAMc,SApBS,SAACC,GACpBA,EAAMC,iBAENR,EAAQ,IACRvB,EAASgC,IAAI,CACXjC,KAAMuB,EACNxB,UAAU,EACVmC,UAAW/C,EAASS,UAAUuC,WAAWC,qBAavC,UACE,uBACEC,UAAQ,EACRC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAAQgB,EAAEC,OAAOH,QAClCI,YAAY,6BAEd,wBAAQC,KAAK,SAAb,oBAEDhB,GAASA,EAAMiB,KAAI,SAACrB,GAAD,OAAU,cAAC,EAAD,eAAwBA,GAAbA,EAAKzB,c,gBCtChD+C,EAAmB,kBACvBlD,EAAKmD,gBAAgB,IAAI3D,IAASQ,KAAKoD,qBAEnCC,EAAS,WACb,OACE,8BACE,yBAAQ3C,UAAU,SAASE,QAASsC,EAApC,UACE,cAAC,IAAD,CAAiB/B,KAAMmC,IAAa5C,UAAU,QAAQW,KAAK,OAC3D,sBAAMX,UAAU,UAAhB,0BAYO6C,EAPH,WAAO,IAAD,EACDC,YAAaxD,GAC5B,OAFgB,oBAEF,cAAC,EAAD,IAAY,cAAC,EAAD,KChB5ByD,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e936d0b8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n\nfirebase.initializeApp({\n    \n    apiKey: \"AIzaSyAbIs0fdjOFFiJcSrnnNC7WarU3D8HlFKA\",\n    authDomain: \"sampleapp-919fc.firebaseapp.com\",\n    projectId: \"sampleapp-919fc\",\n    storageBucket: \"sampleapp-919fc.appspot.com\",\n    messagingSenderId: \"1001941216374\",\n    appId: \"1:1001941216374:web:60ee90552d2b2dff018357\"\n\n});\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport default firebase;","import \"./App.css\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/fontawesome-free-regular\";\nimport firebase, { auth, firestore } from \"./firebase\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport {\n  faClipboardCheck,\n  faSignOutAlt,\n} \nfrom \"@fortawesome/free-solid-svg-icons\";\n\nconst Todos = () => {\n  const [todo, setTodo] = useState(\"\");\n  const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`);\n  const [todos] = useCollectionData(todosRef, { idField: \"id\" });\n\n  const signOut = () => auth.signOut();\n\n  const onSubmitTodo = (event) => {\n    event.preventDefault();\n\n    setTodo(\"\");\n    todosRef.add({\n      text: todo,\n      complete: false,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n  };\n\n  return (\n    <>\n      <header>\n        <button className=\"signout\" onClick={signOut}>\n        <span className='signin2'>Signout</span>\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"icons\" size=\"lg\" />\n        </button>\n      </header>\n      <main>\n        <form onSubmit={onSubmitTodo}>\n          <input\n            required\n            value={todo}\n            onChange={(e) => setTodo(e.target.value)}\n            placeholder=\"Add Stuff to the board..\"\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n        {todos && todos.map((todo) => <Todo key={todo.id} {...todo} />)}\n      </main>\n    </>\n  );\n};\n\nconst Todo = ({ id, complete, text }) => {\n  const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`);\n  const onCompleteTodo = (id, complete) =>\n    todosRef.doc(id).set({ complete: !complete }, { merge: true });\n\n  const onDeleteTodo = (id) => todosRef.doc(id).delete();\n\n  return (\n    <div key={id} className=\"todo\">\n      <button\n        className={`todo-item ${complete ? \"complete\" : \"\"}`}\n        tabIndex=\"0\"\n        onClick={() => onCompleteTodo(id, complete)}\n      >\n        {text}\n      </button>\n      <button onClick={() => onDeleteTodo(id)}>\n        <FontAwesomeIcon icon={faTrashAlt} className=\"icons\" size=\"lg\" />\n      </button>\n      <button onClick={() => navigator.clipboard.writeText(text)}>\n        <FontAwesomeIcon icon={faClipboardCheck} className=\"icons\" size=\"lg\" />\n      </button>\n    </div>\n  );\n};\n\nexport default Todos;\n","import Todos from \"./Todos\";\nimport { auth } from \"./firebase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n faSignInAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport firebase from \"firebase\";\nimport \"./App.css\";\n\nconst signInWithGoogle = () =>\n  auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n\nconst SignIn = () => {\n  return (\n    <div>\n      <button className=\"signin\" onClick={signInWithGoogle}>\n        <FontAwesomeIcon icon={faSignInAlt} className=\"icons\" size=\"lg\" />\n        <span className='signin2'>SignIn</span>\n      </button>\n    </div>\n  );\n};\nconst App = () => {\n  const [user] = useAuthState(auth);\n  return user ? <Todos /> : <SignIn />;\n         \n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst Logo=()=>{\n  return(<h1>ClipBoard</h1>)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}